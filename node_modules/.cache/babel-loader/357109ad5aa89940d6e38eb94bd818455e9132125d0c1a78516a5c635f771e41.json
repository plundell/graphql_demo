{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx\";\nimport React from 'react';\nimport { TileGrid } from 'components/tiles.d/tile-grid.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  markClass: 'marked'\n};\nfunction randomDelay(resolveWith) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (3000 - 1000) + 1000;\n    setTimeout(() => {\n      // console.log('resolving with',resolveWith)\n      resolve(resolveWith);\n    }, delay);\n  });\n}\nexport default class CountryResults extends React.Component {\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    console.log(this._ID, `<${this.constructor.name}>`, ...args);\n  }\n  constructor(props) {\n    var _this$props$results;\n    super(props);\n    this._ID = void 0;\n    this.cache = {};\n    this.buildTile = ent => {\n      const tile = {\n        title: ent.value,\n        classNames: [ent.type.toLowerCase()]\n      };\n      const cls = settings.markClass;\n      tile.onClick = function () {\n        const i = tile.classNames.indexOf(cls);\n        if (i > -1) {\n          tile.classNames.splice(i, 1);\n          this.elem.classList.remove(cls);\n        } else {\n          tile.classNames.push(settings.markClass);\n          this.elem.classList.add(cls);\n        }\n      };\n      const promise = this[`build${ent.type}TileContent`](ent);\n      tile.content = promise;\n      promise.then(content => {\n        tile.content = content;\n      });\n      return tile;\n    };\n    this.buildCountryTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildContinentTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildLanguageTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this));\n    };\n    this.getTiles = () => {\n      if (this.props.results) {\n        const tiles = {};\n        var i = 0;\n        for (const ent of this.props.results) {\n          tiles[ent.key] = this.getTile(ent);\n        }\n        this.log(\"rendering:\", Object.values(tiles).map(t => `${t.title}${t.content instanceof Promise ? '*' : ''}`).join(', '));\n        return tiles;\n      } else {\n        return null;\n      }\n    };\n    this._ID = Math.floor(Math.random() * 10000);\n    this.log(\"creating\", (_this$props$results = this.props.results) === null || _this$props$results === void 0 ? void 0 : _this$props$results.map(ent => ent.value).join(', '));\n  }\n  getTile(ent) {\n    if (this.cache.hasOwnProperty(ent.key) == false) {\n      this.cache[ent.key] = this.buildTile(ent);\n    }\n    return this.cache[ent.key];\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.constructor.name,\n      children: /*#__PURE__*/_jsxDEV(TileGrid, {\n        tiles: this.getTiles()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","TileGrid","settings","markClass","randomDelay","resolveWith","Promise","resolve","delay","Math","random","setTimeout","CountryResults","Component","log","args","console","_ID","constructor","name","props","cache","buildTile","ent","tile","title","value","classNames","type","toLowerCase","cls","onClick","i","indexOf","splice","elem","classList","remove","push","add","promise","content","then","buildCountryTileContent","buildContinentTileContent","buildLanguageTileContent","getTiles","results","tiles","key","getTile","Object","values","map","t","join","floor","hasOwnProperty","render"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx"],"sourcesContent":["import React from 'react'\nimport {TileGrid, Props as GridProps,Tile} from 'components/tiles.d/tile-grid.component'\nimport {Entity, NullableEntityArray} from './country-search.component'\n\ninterface Props {\n\tresults:NullableEntityArray\n}\n\ntype TileProps=NonNullable<GridProps['tiles']>[keyof GridProps['tiles']] ;\ntype TileRecords=NonNullable<GridProps['tiles']>\n\t\nconst settings={\n\tmarkClass:'marked'\n}\n\nfunction randomDelay<T>(resolveWith:T):Promise<T>{\n\treturn new Promise(resolve=>{\n\t\tconst delay=Math.random() * (3000 - 1000) + 1000;\n\t\tsetTimeout(()=>{\n\t\t\t// console.log('resolving with',resolveWith)\n\t\t\tresolve(resolveWith);\n\t\t},delay);\n\t})\n}\n\nexport default class CountryResults extends React.Component<Props> {\n\tprivate _ID:number;\n\tlog(...args:any[]){\n\t\tconsole.log(this._ID,`<${this.constructor.name}>`,...args);\n\t}\n\n\tprivate cache:TileRecords={};\n\t\n\tconstructor(props:Props){\n\t\tsuper(props);\n\t\tthis._ID=Math.floor(Math.random()*10000);\n\t\tthis.log(\"creating\",this.props.results?.map(ent=>ent.value).join(', '));\n\t}\n\n\n\n\tprivate getTile(ent:Entity):TileProps{\n\t\tif(this.cache.hasOwnProperty(ent.key)==false){\n\t\t\tthis.cache[ent.key]=this.buildTile(ent);\n\t\t}\n\t\treturn this.cache[ent.key];\n\t}\n\n\tprivate buildTile=(ent:Entity):TileProps=>{\n\t\tconst tile:any={\n\t\t\ttitle:ent.value\n\t\t\t,classNames:[ent.type.toLowerCase()]\n\t\t};\n\t\tconst cls=settings.markClass;\n\t\ttile.onClick=function(this:Tile){\n\t\t\tconst i=tile.classNames.indexOf(cls)\n\t\t\tif(i>-1){\n\t\t\t\ttile.classNames.splice(i,1)\n\t\t\t\tthis.elem.classList.remove(cls)\n\t\t\t}else{\n\t\t\t\ttile.classNames.push(settings.markClass);\n\t\t\t\tthis.elem.classList.add(cls);\n\t\t\t}\n\t\t}\n\t\tconst promise=this[`build${ent.type}TileContent`](ent);\n\t\ttile.content=promise;\n\t\tpromise.then(content=>{tile.content=content})\n\t\n\t\treturn tile;\n\t}\n\tprivate buildCountryTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildContinentTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildLanguageTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\n\tprivate getTiles=():GridProps['tiles']=>{\n\t\tif(this.props.results){\n\t\t\tconst tiles:TileRecords={};\n\t\t\tvar i=0;\n\t\t    for(const ent of this.props.results){\n\t\t    \ttiles[ent.key]=this.getTile(ent);\n\t\t\t}\n\t\t\tthis.log(\"rendering:\",Object.values(tiles).map(t=>(`${t.title}${t.content instanceof Promise ?'*':''}`)).join(', '));\n\t\t\treturn tiles;\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className={this.constructor.name}>\n\t\t\t\t<TileGrid tiles={this.getTiles()}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\n\n\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAgC,wCAAwC;AAAA;AAUxF,MAAMC,QAAQ,GAAC;EACdC,SAAS,EAAC;AACX,CAAC;AAED,SAASC,WAAW,CAAIC,WAAa,EAAY;EAChD,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAE;IAC3B,MAAMC,KAAK,GAACC,IAAI,CAACC,MAAM,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI;IAChDC,UAAU,CAAC,MAAI;MACd;MACAJ,OAAO,CAACF,WAAW,CAAC;IACrB,CAAC,EAACG,KAAK,CAAC;EACT,CAAC,CAAC;AACH;AAEA,eAAe,MAAMI,cAAc,SAASZ,KAAK,CAACa,SAAS,CAAQ;EAElEC,GAAG,GAAe;IAAA,kCAAXC,IAAI;MAAJA,IAAI;IAAA;IACVC,OAAO,CAACF,GAAG,CAAC,IAAI,CAACG,GAAG,EAAE,IAAG,IAAI,CAACC,WAAW,CAACC,IAAK,GAAE,EAAC,GAAGJ,IAAI,CAAC;EAC3D;EAIAG,WAAW,CAACE,KAAW,EAAC;IAAA;IACvB,KAAK,CAACA,KAAK,CAAC;IAAC,KARNH,GAAG;IAAA,KAKHI,KAAK,GAAa,CAAC,CAAC;IAAA,KAiBpBC,SAAS,GAAEC,GAAU,IAAa;MACzC,MAAMC,IAAQ,GAAC;QACdC,KAAK,EAACF,GAAG,CAACG,KAAK;QACdC,UAAU,EAAC,CAACJ,GAAG,CAACK,IAAI,CAACC,WAAW,EAAE;MACpC,CAAC;MACD,MAAMC,GAAG,GAAC5B,QAAQ,CAACC,SAAS;MAC5BqB,IAAI,CAACO,OAAO,GAAC,YAAmB;QAC/B,MAAMC,CAAC,GAACR,IAAI,CAACG,UAAU,CAACM,OAAO,CAACH,GAAG,CAAC;QACpC,IAAGE,CAAC,GAAC,CAAC,CAAC,EAAC;UACPR,IAAI,CAACG,UAAU,CAACO,MAAM,CAACF,CAAC,EAAC,CAAC,CAAC;UAC3B,IAAI,CAACG,IAAI,CAACC,SAAS,CAACC,MAAM,CAACP,GAAG,CAAC;QAChC,CAAC,MAAI;UACJN,IAAI,CAACG,UAAU,CAACW,IAAI,CAACpC,QAAQ,CAACC,SAAS,CAAC;UACxC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAACG,GAAG,CAACT,GAAG,CAAC;QAC7B;MACD,CAAC;MACD,MAAMU,OAAO,GAAC,IAAI,CAAE,QAAOjB,GAAG,CAACK,IAAK,aAAY,CAAC,CAACL,GAAG,CAAC;MACtDC,IAAI,CAACiB,OAAO,GAACD,OAAO;MACpBA,OAAO,CAACE,IAAI,CAACD,OAAO,IAAE;QAACjB,IAAI,CAACiB,OAAO,GAACA,OAAO;MAAA,CAAC,CAAC;MAE7C,OAAOjB,IAAI;IACZ,CAAC;IAAA,KACOmB,uBAAuB,GAAEpB,GAAU,IAAwB;MAClE,OAAOnB,WAAW,eAAC;QAAA,UAAOmB,GAAG,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,CAAC;IAC5C,CAAC;IAAA,KACOgB,yBAAyB,GAAErB,GAAU,IAAwB;MACpE,OAAOnB,WAAW,eAAC;QAAA,UAAOmB,GAAG,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,CAAC;IAC5C,CAAC;IAAA,KACOiB,wBAAwB,GAAEtB,GAAU,IAAwB;MACnE,OAAOnB,WAAW,eAAC;QAAA,UAAOmB,GAAG,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,CAAC;IAC5C,CAAC;IAAA,KAEOkB,QAAQ,GAAC,MAAuB;MACvC,IAAG,IAAI,CAAC1B,KAAK,CAAC2B,OAAO,EAAC;QACrB,MAAMC,KAAiB,GAAC,CAAC,CAAC;QAC1B,IAAIhB,CAAC,GAAC,CAAC;QACJ,KAAI,MAAMT,GAAG,IAAI,IAAI,CAACH,KAAK,CAAC2B,OAAO,EAAC;UACnCC,KAAK,CAACzB,GAAG,CAAC0B,GAAG,CAAC,GAAC,IAAI,CAACC,OAAO,CAAC3B,GAAG,CAAC;QACpC;QACA,IAAI,CAACT,GAAG,CAAC,YAAY,EAACqC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC,CAACK,GAAG,CAACC,CAAC,IAAI,GAAEA,CAAC,CAAC7B,KAAM,GAAE6B,CAAC,CAACb,OAAO,YAAYnC,OAAO,GAAE,GAAG,GAAC,EAAG,EAAE,CAAC,CAACiD,IAAI,CAAC,IAAI,CAAC,CAAC;QACpH,OAAOP,KAAK;MACb,CAAC,MAAI;QACJ,OAAO,IAAI;MACZ;IACD,CAAC;IAzDA,IAAI,CAAC/B,GAAG,GAACR,IAAI,CAAC+C,KAAK,CAAC/C,IAAI,CAACC,MAAM,EAAE,GAAC,KAAK,CAAC;IACxC,IAAI,CAACI,GAAG,CAAC,UAAU,yBAAC,IAAI,CAACM,KAAK,CAAC2B,OAAO,wDAAlB,oBAAoBM,GAAG,CAAC9B,GAAG,IAAEA,GAAG,CAACG,KAAK,CAAC,CAAC6B,IAAI,CAAC,IAAI,CAAC,CAAC;EACxE;EAIQL,OAAO,CAAC3B,GAAU,EAAW;IACpC,IAAG,IAAI,CAACF,KAAK,CAACoC,cAAc,CAAClC,GAAG,CAAC0B,GAAG,CAAC,IAAE,KAAK,EAAC;MAC5C,IAAI,CAAC5B,KAAK,CAACE,GAAG,CAAC0B,GAAG,CAAC,GAAC,IAAI,CAAC3B,SAAS,CAACC,GAAG,CAAC;IACxC;IACA,OAAO,IAAI,CAACF,KAAK,CAACE,GAAG,CAAC0B,GAAG,CAAC;EAC3B;EAgDAS,MAAM,GAAE;IACP,oBACC;MAAK,SAAS,EAAE,IAAI,CAACxC,WAAW,CAACC,IAAK;MAAA,uBACrC,QAAC,QAAQ;QAAC,KAAK,EAAE,IAAI,CAAC2B,QAAQ;MAAG;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9B;EAER;AAMD"},"metadata":{},"sourceType":"module","externalDependencies":[]}