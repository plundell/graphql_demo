{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/tiles.d/tile-grid.component.tsx\";\nimport React from 'react';\nimport { Tile } from './tile.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export class TileGrid<T extends Props> extends React.Component<T,State<T>> {\nexport class TileGrid extends React.Component {\n  // state:Record<Extract<keyof Props[\"tiles\"],string>,Content>\n\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    const state = {};\n    for (const key in this.props.tiles) {\n      const tile = this.props.tiles[key];\n      if (tile.content instanceof Promise) {\n        tile.content.then(c => {\n          this.updateTileContent(key, c);\n        });\n        state[key] = props.whileLoading || /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }, void 0);\n      } else {\n        state[key] = tile.content;\n      }\n    }\n    this.state = state;\n  }\n  updateTileContent(key, content) {\n    if (this.state.hasOwnProperty(key)) {\n      this.setState(Object.fromEntries([[key, content]]));\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tileGrid\",\n      children: Object.entries(this.props.tiles).map(_ref => {\n        let [key, {\n          title,\n          className\n        }] = _ref;\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          title: title,\n          className: className,\n          content: this.state[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this);\n  }\n}\nexport default TileGrid;","map":{"version":3,"names":["React","Tile","TileGrid","Component","constructor","props","state","key","tiles","tile","content","Promise","then","c","updateTileContent","whileLoading","hasOwnProperty","setState","Object","fromEntries","render","entries","map","title","className"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/tiles.d/tile-grid.component.tsx"],"sourcesContent":["import React from 'react'\nimport {Tile, Props as TileProps} from './tile.component'\n\n\ntype Content=TileProps[\"content\"];\n\n//we want to allow any async content to be replaced when the data is available, so\n//we expand the type, then in the constructor we \ntype AsyncTileProps=Omit<TileProps,'content'> & {content:Content|Promise<Content>}\ntype AsyncTiles=Record<string,AsyncTileProps>\n\nexport type Props={\n\ttiles:AsyncTiles\n\twhileLoading?:Content\n}\n\n// export class TileGrid<T extends Props> extends React.Component<T,State<T>> {\nexport class TileGrid extends React.Component<Props> {\n\t\n\t// state:Record<Extract<keyof Props[\"tiles\"],string>,Content>\n\tstate:Record<string,Content>\n\n\tconstructor(props:Props){\n\t\tsuper(props);\n\t\tconst state:any={};\n\t\tfor(const key in this.props.tiles){\n\t\t\tconst tile=this.props.tiles[key]\n\t\t\tif(tile.content instanceof Promise){\n\t\t\t\ttile.content.then(c=>{this.updateTileContent(key,c)});\n\t\t\t\tstate[key]=props.whileLoading||(<span className='loading'></span>)\n\t\t\t}else{\n\t\t\t\tstate[key]=tile.content;\n\t\t\t}\n\t\t}\n\t\tthis.state=state\n\t}\n\n\tupdateTileContent(key:string,content:Content){\n\t\tif(this.state.hasOwnProperty(key)){\n\t\t\tthis.setState(Object.fromEntries([[key,content]]));\n\t\t}\n\t}\n\n  \trender() {return (\n\t\t<div className=\"tileGrid\">{\n\t\t\tObject.entries(this.props.tiles).map(([key,{title,className}])=>\n\t\t\t\t<Tile key={key} title={title} className={className} content={this.state[key]} />\n\t\t\t)\n\t\t}</div>  \n  \t)}\n\n}\n\nexport default TileGrid\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAA2B,kBAAkB;AAAA;AAezD;AACA,OAAO,MAAMC,QAAQ,SAASF,KAAK,CAACG,SAAS,CAAQ;EAEpD;;EAGAC,WAAW,CAACC,KAAW,EAAC;IACvB,KAAK,CAACA,KAAK,CAAC;IAAC,KAHdC,KAAK;IAIJ,MAAMA,KAAS,GAAC,CAAC,CAAC;IAClB,KAAI,MAAMC,GAAG,IAAI,IAAI,CAACF,KAAK,CAACG,KAAK,EAAC;MACjC,MAAMC,IAAI,GAAC,IAAI,CAACJ,KAAK,CAACG,KAAK,CAACD,GAAG,CAAC;MAChC,IAAGE,IAAI,CAACC,OAAO,YAAYC,OAAO,EAAC;QAClCF,IAAI,CAACC,OAAO,CAACE,IAAI,CAACC,CAAC,IAAE;UAAC,IAAI,CAACC,iBAAiB,CAACP,GAAG,EAACM,CAAC,CAAC;QAAA,CAAC,CAAC;QACrDP,KAAK,CAACC,GAAG,CAAC,GAACF,KAAK,CAACU,YAAY,iBAAG;UAAM,SAAS,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,UAAS;MACnE,CAAC,MAAI;QACJT,KAAK,CAACC,GAAG,CAAC,GAACE,IAAI,CAACC,OAAO;MACxB;IACD;IACA,IAAI,CAACJ,KAAK,GAACA,KAAK;EACjB;EAEAQ,iBAAiB,CAACP,GAAU,EAACG,OAAe,EAAC;IAC5C,IAAG,IAAI,CAACJ,KAAK,CAACU,cAAc,CAACT,GAAG,CAAC,EAAC;MACjC,IAAI,CAACU,QAAQ,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAACZ,GAAG,EAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD;EACD;EAEEU,MAAM,GAAG;IAAC,oBACX;MAAK,SAAS,EAAC,UAAU;MAAA,UACxBF,MAAM,CAACG,OAAO,CAAC,IAAI,CAAChB,KAAK,CAACG,KAAK,CAAC,CAACc,GAAG,CAAC;QAAA,IAAC,CAACf,GAAG,EAAC;UAACgB,KAAK;UAACC;QAAS,CAAC,CAAC;QAAA,oBAC5D,QAAC,IAAI;UAAW,KAAK,EAAED,KAAM;UAAC,SAAS,EAAEC,SAAU;UAAC,OAAO,EAAE,IAAI,CAAClB,KAAK,CAACC,GAAG;QAAE,GAAlEA,GAAG;UAAA;UAAA;UAAA;QAAA,QAAkE;MAAA;IAChF;MAAA;MAAA;MAAA;IAAA,QACK;EACL;AAEJ;AAEA,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}