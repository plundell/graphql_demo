{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/tiles.d/tile-grid.component.tsx\";\nimport React from 'react';\nimport { Tile } from './tile.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultProps = {\n  whileLoading: /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 16\n  }, this)\n};\n\n// export class TileGrid<T extends Props> extends React.Component<T,State<T>> {\nexport class TileGrid extends React.Component {\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    console.log(this._ID, `<${this.constructor.name}>`, ...args);\n  }\n  constructor(props) {\n    const _props = Object.assign({}, defaultProps, props);\n    super(_props);\n    this._ID = void 0;\n    this._ID = Math.floor(Math.random() * 10000);\n    this.log(\"creating:\", Object.values(this.props.tiles).map(t => `${t.title}${t.content instanceof Promise ? '*' : ''}`).join(', '));\n  }\n  updateTileContent(key, content) {\n    if (this.state.hasOwnProperty(key)) {\n      this.log(\"updating content of tile\", key);\n      this.setState(Object.fromEntries([[key, content]]));\n    } else {\n      this.log(\"WARNING - no such tile:\", key);\n    }\n  }\n  render() {\n    this.log(\"rendering:\", Object.values(this.props.tiles).map(t => `${t.title}${t.content instanceof Promise ? '*' : ''}`).join(', '));\n    // console.log(this.props.tiles, this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tileGrid\",\n      children: Object.entries(this.props.tiles).map(_ref => {\n        let [key, tile] = _ref;\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          title: (tile === null || tile === void 0 ? void 0 : tile.title) || key,\n          className: tile === null || tile === void 0 ? void 0 : tile.className,\n          content: this.state[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default TileGrid;","map":{"version":3,"names":["React","Tile","defaultProps","whileLoading","TileGrid","Component","log","args","console","_ID","constructor","name","props","_props","Object","assign","Math","floor","random","values","tiles","map","t","title","content","Promise","join","updateTileContent","key","state","hasOwnProperty","setState","fromEntries","render","entries","tile","className"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/tiles.d/tile-grid.component.tsx"],"sourcesContent":["import React from 'react'\nimport {Tile, Props as TileProps} from './tile.component'\n\n\ntype TileContent=TileProps[\"content\"];\n\n//we want to allow any async content to be replaced when the data is available, so\n//we expand the type, then in the constructor we \ntype AsyncTileProps=Omit<TileProps,'content'> & {content:TileContent|Promise<TileContent>}\ntype AsyncTiles=Record<string,AsyncTileProps>\n\nexport type Props={\n\ttiles:AsyncTiles\n\twhileLoading?:TileContent\n}\n\nconst defaultProps={\n\twhileLoading:(<span className='loading'></span>)\n}\n\n// export class TileGrid<T extends Props> extends React.Component<T,State<T>> {\nexport class TileGrid extends React.Component<Props> {\n\t\n\tprivate _ID:number;\n\tlog(...args:any[]){\n\t\tconsole.log(this._ID,`<${this.constructor.name}>`,...args);\n\t}\n\n\tconstructor(props:Props){\n\t\tconst _props:Required<Props>=Object.assign({},defaultProps,props);\n\t\tsuper(_props);\n\t\tthis._ID=Math.floor(Math.random()*10000);\n\n\t\tthis.log(\"creating:\",Object.values(this.props.tiles).map(t=>(`${t.title}${t.content instanceof Promise ?'*':''}`)).join(', '));\n\t}\n\n\tupdateTileContent(key:string,content:TileContent){\n\t\tif(this.state.hasOwnProperty(key)){\n\t\t\tthis.log(\"updating content of tile\",key) \n\t\t\tthis.setState(Object.fromEntries([[key,content]]));\n\t\t}else{\n\t\t\tthis.log(\"WARNING - no such tile:\",key)\n\t\t}\n\t}\n\n\n\n  \trender() {\n  \t\tthis.log(\"rendering:\",Object.values(this.props.tiles).map(t=>(`${t.title}${t.content instanceof Promise ?'*':''}`)).join(', '));\n  \t\t// console.log(this.props.tiles, this.state);\n  \t\treturn (\n\t\t\t<div className=\"tileGrid\">{\n\t\t\t\tObject.entries(this.props.tiles).map(([key,tile])=>\n\t\t\t\t\t<Tile key={key} title={tile?.title||key} className={tile?.className} content={this.state[key]} />\n\t\t\t\t)\n\t\t\t}</div>  \n  \t\t)\n  \t}\n\n}\n\nexport default TileGrid\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAA2B,kBAAkB;AAAA;AAezD,MAAMC,YAAY,GAAC;EAClBC,YAAY,eAAE;IAAM,SAAS,EAAC;EAAS;IAAA;IAAA;IAAA;EAAA;AACxC,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,SAASJ,KAAK,CAACK,SAAS,CAAQ;EAGpDC,GAAG,GAAe;IAAA,kCAAXC,IAAI;MAAJA,IAAI;IAAA;IACVC,OAAO,CAACF,GAAG,CAAC,IAAI,CAACG,GAAG,EAAE,IAAG,IAAI,CAACC,WAAW,CAACC,IAAK,GAAE,EAAC,GAAGJ,IAAI,CAAC;EAC3D;EAEAG,WAAW,CAACE,KAAW,EAAC;IACvB,MAAMC,MAAsB,GAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAACb,YAAY,EAACU,KAAK,CAAC;IACjE,KAAK,CAACC,MAAM,CAAC;IAAC,KAPPJ,GAAG;IAQV,IAAI,CAACA,GAAG,GAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,KAAK,CAAC;IAExC,IAAI,CAACZ,GAAG,CAAC,WAAW,EAACQ,MAAM,CAACK,MAAM,CAAC,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI,GAAEA,CAAC,CAACC,KAAM,GAAED,CAAC,CAACE,OAAO,YAAYC,OAAO,GAAE,GAAG,GAAC,EAAG,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/H;EAEAC,iBAAiB,CAACC,GAAU,EAACJ,OAAmB,EAAC;IAChD,IAAG,IAAI,CAACK,KAAK,CAACC,cAAc,CAACF,GAAG,CAAC,EAAC;MACjC,IAAI,CAACtB,GAAG,CAAC,0BAA0B,EAACsB,GAAG,CAAC;MACxC,IAAI,CAACG,QAAQ,CAACjB,MAAM,CAACkB,WAAW,CAAC,CAAC,CAACJ,GAAG,EAACJ,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,MAAI;MACJ,IAAI,CAAClB,GAAG,CAAC,yBAAyB,EAACsB,GAAG,CAAC;IACxC;EACD;EAIEK,MAAM,GAAG;IACR,IAAI,CAAC3B,GAAG,CAAC,YAAY,EAACQ,MAAM,CAACK,MAAM,CAAC,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI,GAAEA,CAAC,CAACC,KAAM,GAAED,CAAC,CAACE,OAAO,YAAYC,OAAO,GAAE,GAAG,GAAC,EAAG,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/H;IACA,oBACD;MAAK,SAAS,EAAC,UAAU;MAAA,UACxBZ,MAAM,CAACoB,OAAO,CAAC,IAAI,CAACtB,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAAC;QAAA,IAAC,CAACO,GAAG,EAACO,IAAI,CAAC;QAAA,oBAC/C,QAAC,IAAI;UAAW,KAAK,EAAE,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEZ,KAAK,KAAEK,GAAI;UAAC,SAAS,EAAEO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,SAAU;UAAC,OAAO,EAAE,IAAI,CAACP,KAAK,CAACD,GAAG;QAAE,GAAnFA,GAAG;UAAA;UAAA;UAAA;QAAA,QAAmF;MAAA;IACjG;MAAA;MAAA;MAAA;IAAA,QACK;EAEP;AAEH;AAEA,eAAexB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}