{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/country-input.d/country-input.component.tsx\";\nimport React from 'react';\nimport { Input } from 'components/input.component';\nimport { getNamesAndCodes } from './names-and-codes.query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CountryInput extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.entities = null;\n    getNamesAndCodes().then(ent => {\n      if (ent.length) {\n        this.entities = ent;\n      }\n    });\n  }\n  getCompletions(search, entities) {\n    if (!entities || !entities.length) entities = this.entities; //if no subset of entities are passed in then use the entire list\n\n    if (!entities || !entities.length) return null;\n    const regex = new RegExp(search.length < 3 ? '^' : '' + search, 'i');\n    //short strings we only match begining, always case insensistive\n    if (search.length < 3) entities = entities.filter(ent => ent.name.match(regex) || ent.code.match(regex));else entities = entities.filter(ent => ent.name.match(regex));\n    return entities.length ? entities : null;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      id: \"search\",\n      debounce: 500,\n      getCompletions: this.getCompletions.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Input","getNamesAndCodes","CountryInput","Component","constructor","entities","then","ent","length","getCompletions","search","regex","RegExp","filter","name","match","code","render","bind"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/country-input.d/country-input.component.tsx"],"sourcesContent":["import React from 'react'\nimport {Input} from 'components/input.component'\nimport {getNamesAndCodes,Entity} from './names-and-codes.query'\n\ntype NullableEntityArray=Entity[]|null;\n\nexport default class CountryInput extends React.Component {\n\n\tprivate entities:NullableEntityArray=null;\n\n\tconstructor(...args:any[]){\n\t\tsuper(...args)\n\t\tgetNamesAndCodes().then(ent=>{if(ent.length){this.entities=ent}});\n\t}\n\n\tgetCompletions(search:string,entities:NullableEntityArray):NullableEntityArray {\n\t\tif(!entities || !entities.length)\n\t\t\tentities=this.entities; //if no subset of entities are passed in then use the entire list\n\t\t\n\t\tif(!entities || !entities.length)\n\t\t\treturn null;\n\n\t\tconst regex=new RegExp(search.length<3 ? '^' : ''+search,'i'); \n\t\t//short strings we only match begining, always case insensistive\n\t\tif(search.length<3)\n\t\t\tentities=entities.filter(ent=>ent.name.match(regex)||ent.code.match(regex));\n\t\telse\n\t\t\tentities=entities.filter(ent=>ent.name.match(regex));\n\t\t\n\t\treturn (entities.length ? entities : null);\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<Input id=\"search\" debounce={500} getCompletions={this.getCompletions.bind(this)} />\n\t\t)\n\t}\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,QAAO,4BAA4B;AAChD,SAAQC,gBAAgB,QAAc,yBAAyB;AAAA;AAI/D,eAAe,MAAMC,YAAY,SAASH,KAAK,CAACI,SAAS,CAAC;EAIzDC,WAAW,GAAe;IACzB,KAAK,CAAC,YAAO,CAAC;IAAA,KAHPC,QAAQ,GAAqB,IAAI;IAIxCJ,gBAAgB,EAAE,CAACK,IAAI,CAACC,GAAG,IAAE;MAAC,IAAGA,GAAG,CAACC,MAAM,EAAC;QAAC,IAAI,CAACH,QAAQ,GAACE,GAAG;MAAA;IAAC,CAAC,CAAC;EAClE;EAEAE,cAAc,CAACC,MAAa,EAACL,QAA4B,EAAsB;IAC9E,IAAG,CAACA,QAAQ,IAAI,CAACA,QAAQ,CAACG,MAAM,EAC/BH,QAAQ,GAAC,IAAI,CAACA,QAAQ,CAAC,CAAC;;IAEzB,IAAG,CAACA,QAAQ,IAAI,CAACA,QAAQ,CAACG,MAAM,EAC/B,OAAO,IAAI;IAEZ,MAAMG,KAAK,GAAC,IAAIC,MAAM,CAACF,MAAM,CAACF,MAAM,GAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAACE,MAAM,EAAC,GAAG,CAAC;IAC7D;IACA,IAAGA,MAAM,CAACF,MAAM,GAAC,CAAC,EACjBH,QAAQ,GAACA,QAAQ,CAACQ,MAAM,CAACN,GAAG,IAAEA,GAAG,CAACO,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,IAAEJ,GAAG,CAACS,IAAI,CAACD,KAAK,CAACJ,KAAK,CAAC,CAAC,CAAC,KAE5EN,QAAQ,GAACA,QAAQ,CAACQ,MAAM,CAACN,GAAG,IAAEA,GAAG,CAACO,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAC;IAErD,OAAQN,QAAQ,CAACG,MAAM,GAAGH,QAAQ,GAAG,IAAI;EAC1C;EAEAY,MAAM,GAAE;IACP,oBACC,QAAC,KAAK;MAAC,EAAE,EAAC,QAAQ;MAAC,QAAQ,EAAE,GAAI;MAAC,cAAc,EAAE,IAAI,CAACR,cAAc,CAACS,IAAI,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAEtF;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}