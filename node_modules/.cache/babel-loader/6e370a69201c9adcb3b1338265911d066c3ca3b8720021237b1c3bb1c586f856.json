{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/tiles.d/tile-grid.component.tsx\";\nimport React from 'react';\nimport { Tile } from './tile.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TileGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    for (const key in props.tiles) {\n      const t = props.tiles[key];\n      if (t.content instanceof Promise) {\n        t.content.then(content => {\n          t.content = content;\n          this.forceUpdate();\n        });\n        t.content = props.whileLoading || /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 36\n        }, void 0);\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tileGrid\",\n      children: Object.entries(this.props.tiles).map(_ref => {\n        let [key, {\n          title,\n          content,\n          className\n        }] = _ref;\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          title: title,\n          className: className,\n          content: content\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this);\n  }\n}\nexport default TileGrid;","map":{"version":3,"names":["React","Tile","TileGrid","Component","constructor","props","key","tiles","t","content","Promise","then","forceUpdate","whileLoading","render","Object","entries","map","title","className"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/tiles.d/tile-grid.component.tsx"],"sourcesContent":["import React from 'react'\nimport {Tile, Props as TileProps} from './tile.component'\n\n\ntype AlsoAsync<T>=T|Promise<T>\ntype Content=TileProps[\"content\"];\ntype AsyncTiles=Record<string,Omit<TileProps,'content'> & {content:Content|Promise<Content>}>\n\nexport interface Props {\n\ttiles:AsyncTiles\n\twhileLoading?:Content\n}\n\ntype State<T>={\n\t[K in keyof T]:Content\n}\n\nexport class TileGrid extends React.Component<Props,State<T>> {\n\tconstructor(props:Props){\n\t\tsuper(props);\n\n\t\tfor(const key in props.tiles){\n\t\t\tconst t=props.tiles[key];\n\t\t\tif(t.content instanceof Promise){\n\t\t\t\tt.content.then(content=>{t.content=content;this.forceUpdate();});\n\t\t\t\tt.content=props.whileLoading||(<span className='loading'></span>)\n\t\t\t}\n\t\t}\n\t}\n  \trender() {return (\n\t\t<div className=\"tileGrid\">{\n\t\t\tObject.entries(this.props.tiles).map(([key,{title,content,className}])=>\n\t\t\t\t<Tile key={key} title={title} className={className} content={content as Content} />\n\t\t\t)\n\t\t}</div>  \n  \t)}\n\n}\n\nexport default TileGrid\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAA2B,kBAAkB;AAAA;AAgBzD,OAAO,MAAMC,QAAQ,SAASF,KAAK,CAACG,SAAS,CAAiB;EAC7DC,WAAW,CAACC,KAAW,EAAC;IACvB,KAAK,CAACA,KAAK,CAAC;IAEZ,KAAI,MAAMC,GAAG,IAAID,KAAK,CAACE,KAAK,EAAC;MAC5B,MAAMC,CAAC,GAACH,KAAK,CAACE,KAAK,CAACD,GAAG,CAAC;MACxB,IAAGE,CAAC,CAACC,OAAO,YAAYC,OAAO,EAAC;QAC/BF,CAAC,CAACC,OAAO,CAACE,IAAI,CAACF,OAAO,IAAE;UAACD,CAAC,CAACC,OAAO,GAACA,OAAO;UAAC,IAAI,CAACG,WAAW,EAAE;QAAC,CAAC,CAAC;QAChEJ,CAAC,CAACC,OAAO,GAACJ,KAAK,CAACQ,YAAY,iBAAG;UAAM,SAAS,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,UAAS;MAClE;IACD;EACD;EACEC,MAAM,GAAG;IAAC,oBACX;MAAK,SAAS,EAAC,UAAU;MAAA,UACxBC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACX,KAAK,CAACE,KAAK,CAAC,CAACU,GAAG,CAAC;QAAA,IAAC,CAACX,GAAG,EAAC;UAACY,KAAK;UAACT,OAAO;UAACU;QAAS,CAAC,CAAC;QAAA,oBACpE,QAAC,IAAI;UAAW,KAAK,EAAED,KAAM;UAAC,SAAS,EAAEC,SAAU;UAAC,OAAO,EAAEV;QAAmB,GAArEH,GAAG;UAAA;UAAA;UAAA;QAAA,QAAqE;MAAA;IACnF;MAAA;MAAA;MAAA;IAAA,QACK;EACL;AAEJ;AAEA,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}