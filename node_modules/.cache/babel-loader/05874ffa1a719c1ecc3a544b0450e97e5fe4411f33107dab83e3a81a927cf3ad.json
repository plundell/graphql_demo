{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/buck/Documents/software/formulate_graphql/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/home/buck/Documents/software/formulate_graphql/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx\";\nimport React from 'react';\nimport { TileGrid } from 'components/tiles.d/tile-grid.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction randomDelay(resolveWith) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (3000 - 1000) + 1000;\n    setTimeout(() => {\n      // console.log('resolving with',resolveWith)\n      resolve(resolveWith);\n    }, delay);\n  });\n}\nvar _generateTiles = /*#__PURE__*/_classPrivateFieldLooseKey(\"generateTiles\");\nexport default class CountryResults extends React.Component {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, _generateTiles, {\n      value: _generateTiles2\n    });\n    this.cache = {};\n    this.buildCountryTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildContinentTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildLanguageTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this));\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output\",\n      children: this.props.results ? this.props.results.length ? /*#__PURE__*/_jsxDEV(TileGrid, {\n        tiles: _classPrivateFieldLooseBase(this, _generateTiles)[_generateTiles]()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyResults\",\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this);\n  }\n}\nfunction _generateTiles2() {\n  var _this$props$results;\n  console.log(\"Grid:\", (_this$props$results = this.props.results) === null || _this$props$results === void 0 ? void 0 : _this$props$results.map(ent => ent.value).join(', '));\n  const tiles = {};\n  if (this.props.results && this.props.results.length) {\n    for (const ent of this.props.results) {\n      if (!this.cache.hasOwnProperty(ent.key)) {\n        const tile = {\n          title: ent.value,\n          className: ent.type.toLowerCase()\n        };\n        switch (ent.type) {\n          case 'Country':\n            tile.content = this.buildCountryTileContent(ent);\n            break;\n          case 'Continent':\n            tile.content = this.buildContinentTileContent(ent);\n            break;\n          case 'Language':\n            tile.content = this[`build${ent.type}TileContent`](ent);\n            break;\n        }\n        tile.content.then(content => tile.content = content);\n        this.cache[ent.key] = tile;\n      }\n      tiles[ent.key] = this.cache[ent.key];\n    }\n  }\n  console.log({\n    results: this.props.results,\n    tiles,\n    cache: this.cache\n  });\n  return tiles;\n}","map":{"version":3,"names":["React","TileGrid","randomDelay","resolveWith","Promise","resolve","delay","Math","random","setTimeout","CountryResults","Component","cache","buildCountryTileContent","ent","type","buildContinentTileContent","buildLanguageTileContent","render","props","results","length","console","log","map","value","join","tiles","hasOwnProperty","key","tile","title","className","toLowerCase","content","then"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx"],"sourcesContent":["import React from 'react'\nimport {TileGrid, Props as GridProps} from 'components/tiles.d/tile-grid.component'\nimport {Entity, NullableEntityArray} from './country-search.component'\n\ninterface Props {\n\tresults:NullableEntityArray\n}\n\n\nfunction randomDelay<T>(resolveWith:T):Promise<T>{\n\treturn new Promise(resolve=>{\n\t\tconst delay=Math.random() * (3000 - 1000) + 1000;\n\t\tsetTimeout(()=>{\n\t\t\t// console.log('resolving with',resolveWith)\n\t\t\tresolve(resolveWith);\n\t\t},delay);\n\t})\n}\n\nexport default class CountryResults extends React.Component<Props> {\n\t\n\tprivate cache:GridProps['tiles']={};\n\n\t#generateTiles() {\n\t\tconsole.log(\"Grid:\",this.props.results?.map(ent=>ent.value).join(', '))\n\t\tconst tiles:GridProps['tiles']={};\n\t\tif(this.props.results && this.props.results.length){\n\t\t    for(const ent of this.props.results){\n\t\t    \tif(!this.cache.hasOwnProperty(ent.key)){\n\t\t\t\t\tconst tile:any={title:ent.value, className:ent.type.toLowerCase()};\n\t\t\t\t\tswitch(ent.type){\n\t\t\t\t\tcase 'Country':\n\t\t\t\t\t\ttile.content=this.buildCountryTileContent(ent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Continent':\n\t\t\t\t\t\ttile.content=this.buildContinentTileContent(ent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Language':\n\t\t\t\t\t\ttile.content=this[`build${ent.type}TileContent`](ent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttile.content.then((content:JSX.Element)=>tile.content=content)\n\t\t\t\t\tthis.cache[ent.key]=tile\n\t\t    \t}\n\t\t    \ttiles[ent.key]=this.cache[ent.key];\n\t\t\t}\n\t\t}\n\t\tconsole.log({results:this.props.results, tiles,cache:this.cache});\n\t\treturn tiles;\n\t}\n\n\tprivate buildCountryTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildContinentTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildLanguageTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\n\trender(){\n\t\treturn (<div id=\"output\">{\n\t\t\tthis.props.results ?\n\t\t\t\tthis.props.results.length ?\n\t\t\t\t\t<TileGrid tiles={this.#generateTiles()}/>\n\t\t\t\t\t:<div className='emptyResults'>No results</div>\n\t\t\t\t:''\n\t\t}</div>)\n\t}\n\n\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}