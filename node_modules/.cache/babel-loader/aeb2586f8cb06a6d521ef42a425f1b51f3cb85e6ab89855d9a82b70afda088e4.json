{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/buck/Documents/software/formulate_graphql/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/home/buck/Documents/software/formulate_graphql/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx\";\nimport React from 'react';\nimport { TileGrid } from 'components/tiles.d/tile-grid.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction randomDelay(min, max, resolveWith) {\n  return new Promise(resolve => {\n    setTimeout(resolve.bind(null, resolveWith), Math.random() * (max - min) + min);\n  });\n}\nvar _buildTileContents = /*#__PURE__*/_classPrivateFieldLooseKey(\"buildTileContents\");\nvar _generateCountryHtml = /*#__PURE__*/_classPrivateFieldLooseKey(\"generateCountryHtml\");\nvar _generateContinentHtml = /*#__PURE__*/_classPrivateFieldLooseKey(\"generateContinentHtml\");\nvar _generateLanguageHtml = /*#__PURE__*/_classPrivateFieldLooseKey(\"generateLanguageHtml\");\nexport default class CountryResults extends React.Component {\n  constructor(props) {\n    super(props);\n    Object.defineProperty(this, _buildTileContents, {\n      writable: true,\n      value: results => {\n        const tileContents = {};\n        for (const ent of results) {\n          const tile = {\n            title: ent.value,\n            className: 'result-' + ent.type.toLowerCase()\n          };\n          switch (ent.type) {\n            case 'Country':\n              tile.content = _classPrivateFieldLooseBase(this, _generateCountryHtml)[_generateCountryHtml](ent);\n              break;\n            case 'Continent':\n              tile.content = _classPrivateFieldLooseBase(this, _generateContinentHtml)[_generateContinentHtml](ent);\n              break;\n            case 'Language':\n              tile.content = _classPrivateFieldLooseBase(this, _generateLanguageHtml)[_generateLanguageHtml](ent);\n              break;\n          }\n          tileContents[ent.key] = tile;\n        }\n        return tileContents;\n      }\n    });\n    Object.defineProperty(this, _generateCountryHtml, {\n      writable: true,\n      value: ent => {\n        return randomDelay(100, 500, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ent.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 31\n        }, this));\n      }\n    });\n    Object.defineProperty(this, _generateContinentHtml, {\n      writable: true,\n      value: ent => {\n        return randomDelay(100, 500, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ent.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 31\n        }, this));\n      }\n    });\n    Object.defineProperty(this, _generateLanguageHtml, {\n      writable: true,\n      value: ent => {\n        return randomDelay(100, 500, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ent.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this));\n      }\n    });\n    this.state = {\n      status: \"waiting\"\n    };\n  }\n  setStatus(status) {\n    this.setState({\n      status\n    });\n  }\n  componentDidUpdate() {\n    if (this.state.status != 'finished' && this.props.results) {\n      console.log('changing state to finished...');\n      this.setStatus('finished');\n    } else if (!this.props.results && this.state.status == 'finished') {\n      this.setStatus('waiting');\n    }\n  }\n  render() {\n    switch (this.state.status) {\n      case 'waiting':\n        console.log('waiting... rendering nothing');\n        return;\n      case 'loading':\n        console.log('loading... rendering');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }, this);\n      case 'finished':\n        console.log('rendering', this.props.results);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"output\",\n          children: !this.props.results || !this.props.results.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emptyResults\",\n            children: \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(TileGrid, {\n            tiles: _classPrivateFieldLooseBase(this, _buildTileContents)[_buildTileContents](this.props.results)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this);\n    }\n  }\n}","map":{"version":3,"names":["React","TileGrid","randomDelay","min","max","resolveWith","Promise","resolve","setTimeout","bind","Math","random","CountryResults","Component","constructor","props","results","tileContents","ent","tile","title","value","className","type","toLowerCase","content","key","state","status","setStatus","setState","componentDidUpdate","console","log","render","length"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx"],"sourcesContent":["import React from 'react'\nimport {TileGrid, Props as GridProps} from 'components/tiles.d/tile-grid.component'\nimport {Entity, NullableEntityArray} from './country-search.component'\n\ninterface Props {\n\tresults:NullableEntityArray\n}\ninterface State {\n\tstatus:\"waiting\"|\"loading\"|\"finished\"\n}\n\nfunction randomDelay(min:number,max:number,resolveWith?:any){\n\treturn new Promise(resolve=>{\n\t\tsetTimeout(resolve.bind(null,resolveWith),Math.random() * (max - min) + min)\n\t})\n}\n\nexport default class CountryResults extends React.Component<Props,State> {\n\t\n\n\tconstructor(props:Props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tstatus:\"waiting\"\n\t\t};\n\t}\n\n\tsetStatus(status:State[\"status\"]){\n\t\tthis.setState({status});\n\t}\n\n\tcomponentDidUpdate(): void {\n\t   if(this.state.status!='finished' && this.props.results){\n\t\t\tconsole.log('changing state to finished...')\n\t\t\tthis.setStatus('finished');\n\t\t}else if(!this.props.results && this.state.status=='finished'){\n\t\t\tthis.setStatus('waiting');\n\t\t}\n\t}\n\n\trender(){\n\t\tswitch(this.state.status){\n\t\tcase 'waiting':\n\t\t\tconsole.log('waiting... rendering nothing')\n\t\t\treturn;\n\t\tcase 'loading':\n\t\t\tconsole.log('loading... rendering')\n\t\t\treturn (<div className='loading'></div>)\n\t\tcase 'finished':\n\t\t\tconsole.log('rendering',this.props.results);\n\t\t\treturn (\n\t\t\t\t<div id=\"output\">\n\t\t\t\t\t{(!this.props.results||!this.props.results.length)\n\t\t\t\t\t\t? <div className='emptyResults'>No results</div>\n\t\t\t\t\t\t: <TileGrid tiles={this.#buildTileContents(this.props.results)}/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\t\t\n\t\t\n\t}\n\n\t#buildTileContents=(results:NonNullable<Props[\"results\"]>)=>{\n\t\tconst tileContents:GridProps[\"tiles\"]={};\n\t\tfor(const ent of results){\n\t\t\tconst tile:any={title:ent.value, className:'result-'+ent.type.toLowerCase()};\n\t\t\tswitch(ent.type){\n\t\t\tcase 'Country':\n\t\t\t\ttile.content=this.#generateCountryHtml(ent);\n\t\t\t\tbreak;\n\t\t\tcase 'Continent':\n\t\t\t\ttile.content=this.#generateContinentHtml(ent);\n\t\t\t\tbreak;\n\t\t\tcase 'Language':\n\t\t\t\ttile.content=this.#generateLanguageHtml(ent);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttileContents[ent.key]=tile\n\t\t}\n\t\treturn tileContents;\n\t}\n\n\n\t#generateCountryHtml=(ent:Entity)=>{\n\t\treturn randomDelay(100,500,(<span>{ent.value}</span>));\n\t}\n\t#generateContinentHtml=(ent:Entity)=>{\n\t\treturn randomDelay(100,500,(<span>{ent.value}</span>));\t\n\t}\n\t#generateLanguageHtml=(ent:Entity)=>{\n\t\treturn randomDelay(100,500,(<span>{ent.value}</span>));\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}