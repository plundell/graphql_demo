{"ast":null,"code":"export default {\n  type: assertType,\n  typedArray: assertTypedArray\n};\nfunction assertType(x, type) {\n  if (typeof x != type) throw new TypeError(`Expected a ${type}, but got: (${typeof x})${String(x)}`);\n}\nfunction assertTypedArray(arr, type) {\n  if (!Array.isArray(arr)) throw new TypeError(`Expected ${type}[], but got: (${typeof arr})${String(arr)}`);\n  const i = arr.findIndex(x => typeof x != type);\n  if (i > -1) throw new TypeError(`Expected ${type}[], but index ${i} was: (${typeof arr[i]})${String(arr[i])}`);\n}","map":{"version":3,"names":["type","assertType","typedArray","assertTypedArray","x","TypeError","String","arr","Array","isArray","i","findIndex"],"sources":["/home/buck/Documents/software/formulate_graphql/src/services/assert.helper.ts"],"sourcesContent":["\nexport default {\n\ttype:assertType\n\t,typedArray:assertTypedArray\n}\n\nfunction assertType(x:any,type:string):void{\n\tif(typeof x!=type)\n\t\tthrow new TypeError(`Expected a ${type}, but got: (${typeof x})${String(x)}`);\n}\n\nfunction assertTypedArray(arr:any,type:string):void{\n\tif(!Array.isArray(arr))\n\t\tthrow new TypeError(`Expected ${type}[], but got: (${typeof arr})${String(arr)}`);\n\t\n\tconst i=arr.findIndex(x=>typeof x!=type);\n\tif(i>-1)\n\t\tthrow new TypeError(`Expected ${type}[], but index ${i} was: (${typeof arr[i]})${String(arr[i])}`)\n\n}\n\n"],"mappings":"AACA,eAAe;EACdA,IAAI,EAACC,UAAU;EACdC,UAAU,EAACC;AACb,CAAC;AAED,SAASF,UAAU,CAACG,CAAK,EAACJ,IAAW,EAAM;EAC1C,IAAG,OAAOI,CAAC,IAAEJ,IAAI,EAChB,MAAM,IAAIK,SAAS,CAAE,cAAaL,IAAK,eAAc,OAAOI,CAAE,IAAGE,MAAM,CAACF,CAAC,CAAE,EAAC,CAAC;AAC/E;AAEA,SAASD,gBAAgB,CAACI,GAAO,EAACP,IAAW,EAAM;EAClD,IAAG,CAACQ,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EACrB,MAAM,IAAIF,SAAS,CAAE,YAAWL,IAAK,iBAAgB,OAAOO,GAAI,IAAGD,MAAM,CAACC,GAAG,CAAE,EAAC,CAAC;EAElF,MAAMG,CAAC,GAACH,GAAG,CAACI,SAAS,CAACP,CAAC,IAAE,OAAOA,CAAC,IAAEJ,IAAI,CAAC;EACxC,IAAGU,CAAC,GAAC,CAAC,CAAC,EACN,MAAM,IAAIL,SAAS,CAAE,YAAWL,IAAK,iBAAgBU,CAAE,UAAS,OAAOH,GAAG,CAACG,CAAC,CAAE,IAAGJ,MAAM,CAACC,GAAG,CAACG,CAAC,CAAC,CAAE,EAAC,CAAC;AAEpG"},"metadata":{},"sourceType":"module","externalDependencies":[]}