{"ast":null,"code":"/** All built-in and custom scalars, mapped to their actual values */\n\nexport const ListNamesDocument = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"OperationDefinition\",\n    \"operation\": \"query\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"listNames\"\n    },\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"countries\"\n        },\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"code\"\n            }\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"name\"\n            }\n          }]\n        }\n      }, {\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"continents\"\n        },\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"code\"\n            }\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"name\"\n            }\n          }]\n        }\n      }, {\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"languages\"\n        },\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"code\"\n            }\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"name\"\n            }\n          }]\n        }\n      }]\n    }\n  }]\n};","map":{"version":3,"names":["ListNamesDocument"],"sources":["/home/buck/Documents/software/formulate_graphql/src/types/countries-api.ts"],"sourcesContent":["import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  _Any: any;\n};\n\nexport type Continent = {\n  __typename?: 'Continent';\n  code: Scalars['ID'];\n  countries: Array<Country>;\n  name: Scalars['String'];\n};\n\nexport type ContinentFilterInput = {\n  code?: InputMaybe<StringQueryOperatorInput>;\n};\n\nexport type Country = {\n  __typename?: 'Country';\n  capital?: Maybe<Scalars['String']>;\n  code: Scalars['ID'];\n  continent: Continent;\n  currency?: Maybe<Scalars['String']>;\n  emoji: Scalars['String'];\n  emojiU: Scalars['String'];\n  languages: Array<Language>;\n  name: Scalars['String'];\n  native: Scalars['String'];\n  phone: Scalars['String'];\n  states: Array<State>;\n};\n\nexport type CountryFilterInput = {\n  code?: InputMaybe<StringQueryOperatorInput>;\n  continent?: InputMaybe<StringQueryOperatorInput>;\n  currency?: InputMaybe<StringQueryOperatorInput>;\n};\n\nexport type Language = {\n  __typename?: 'Language';\n  code: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  native?: Maybe<Scalars['String']>;\n  rtl: Scalars['Boolean'];\n};\n\nexport type LanguageFilterInput = {\n  code?: InputMaybe<StringQueryOperatorInput>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  _entities: Array<Maybe<_Entity>>;\n  _service: _Service;\n  continent?: Maybe<Continent>;\n  continents: Array<Continent>;\n  countries: Array<Country>;\n  country?: Maybe<Country>;\n  language?: Maybe<Language>;\n  languages: Array<Language>;\n};\n\n\nexport type Query_EntitiesArgs = {\n  representations: Array<Scalars['_Any']>;\n};\n\n\nexport type QueryContinentArgs = {\n  code: Scalars['ID'];\n};\n\n\nexport type QueryContinentsArgs = {\n  filter?: InputMaybe<ContinentFilterInput>;\n};\n\n\nexport type QueryCountriesArgs = {\n  filter?: InputMaybe<CountryFilterInput>;\n};\n\n\nexport type QueryCountryArgs = {\n  code: Scalars['ID'];\n};\n\n\nexport type QueryLanguageArgs = {\n  code: Scalars['ID'];\n};\n\n\nexport type QueryLanguagesArgs = {\n  filter?: InputMaybe<LanguageFilterInput>;\n};\n\nexport type State = {\n  __typename?: 'State';\n  code?: Maybe<Scalars['String']>;\n  country: Country;\n  name: Scalars['String'];\n};\n\nexport type StringQueryOperatorInput = {\n  eq?: InputMaybe<Scalars['String']>;\n  glob?: InputMaybe<Scalars['String']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  ne?: InputMaybe<Scalars['String']>;\n  nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  regex?: InputMaybe<Scalars['String']>;\n};\n\nexport type _Entity = Continent | Country | Language;\n\nexport type _Service = {\n  __typename?: '_Service';\n  /** The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied */\n  sdl?: Maybe<Scalars['String']>;\n};\n\nexport type ListNamesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ListNamesQuery = { __typename?: 'Query', countries: Array<{ __typename?: 'Country', code: string, name: string }>, continents: Array<{ __typename?: 'Continent', code: string, name: string }>, languages: Array<{ __typename?: 'Language', code: string, name?: string | null }> };\n\n\nexport const ListNamesDocument = { \"kind\": \"Document\", \"definitions\": [{ \"kind\": \"OperationDefinition\", \"operation\": \"query\", \"name\": { \"kind\": \"Name\", \"value\": \"listNames\" }, \"selectionSet\": { \"kind\": \"SelectionSet\", \"selections\": [{ \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"countries\" }, \"selectionSet\": { \"kind\": \"SelectionSet\", \"selections\": [{ \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"code\" } }, { \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"name\" } }] } }, { \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"continents\" }, \"selectionSet\": { \"kind\": \"SelectionSet\", \"selections\": [{ \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"code\" } }, { \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"name\" } }] } }, { \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"languages\" }, \"selectionSet\": { \"kind\": \"SelectionSet\", \"selections\": [{ \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"code\" } }, { \"kind\": \"Field\", \"name\": { \"kind\": \"Name\", \"value\": \"name\" } }] } }] } }] } as unknown as DocumentNode<ListNamesQuery, ListNamesQueryVariables>;"],"mappings":"AAMA;;AAmIA,OAAO,MAAMA,iBAAiB,GAAG;EAAE,MAAM,EAAE,UAAU;EAAE,aAAa,EAAE,CAAC;IAAE,MAAM,EAAE,qBAAqB;IAAE,WAAW,EAAE,OAAO;IAAE,MAAM,EAAE;MAAE,MAAM,EAAE,MAAM;MAAE,OAAO,EAAE;IAAY,CAAC;IAAE,cAAc,EAAE;MAAE,MAAM,EAAE,cAAc;MAAE,YAAY,EAAE,CAAC;QAAE,MAAM,EAAE,OAAO;QAAE,MAAM,EAAE;UAAE,MAAM,EAAE,MAAM;UAAE,OAAO,EAAE;QAAY,CAAC;QAAE,cAAc,EAAE;UAAE,MAAM,EAAE,cAAc;UAAE,YAAY,EAAE,CAAC;YAAE,MAAM,EAAE,OAAO;YAAE,MAAM,EAAE;cAAE,MAAM,EAAE,MAAM;cAAE,OAAO,EAAE;YAAO;UAAE,CAAC,EAAE;YAAE,MAAM,EAAE,OAAO;YAAE,MAAM,EAAE;cAAE,MAAM,EAAE,MAAM;cAAE,OAAO,EAAE;YAAO;UAAE,CAAC;QAAE;MAAE,CAAC,EAAE;QAAE,MAAM,EAAE,OAAO;QAAE,MAAM,EAAE;UAAE,MAAM,EAAE,MAAM;UAAE,OAAO,EAAE;QAAa,CAAC;QAAE,cAAc,EAAE;UAAE,MAAM,EAAE,cAAc;UAAE,YAAY,EAAE,CAAC;YAAE,MAAM,EAAE,OAAO;YAAE,MAAM,EAAE;cAAE,MAAM,EAAE,MAAM;cAAE,OAAO,EAAE;YAAO;UAAE,CAAC,EAAE;YAAE,MAAM,EAAE,OAAO;YAAE,MAAM,EAAE;cAAE,MAAM,EAAE,MAAM;cAAE,OAAO,EAAE;YAAO;UAAE,CAAC;QAAE;MAAE,CAAC,EAAE;QAAE,MAAM,EAAE,OAAO;QAAE,MAAM,EAAE;UAAE,MAAM,EAAE,MAAM;UAAE,OAAO,EAAE;QAAY,CAAC;QAAE,cAAc,EAAE;UAAE,MAAM,EAAE,cAAc;UAAE,YAAY,EAAE,CAAC;YAAE,MAAM,EAAE,OAAO;YAAE,MAAM,EAAE;cAAE,MAAM,EAAE,MAAM;cAAE,OAAO,EAAE;YAAO;UAAE,CAAC,EAAE;YAAE,MAAM,EAAE,OAAO;YAAE,MAAM,EAAE;cAAE,MAAM,EAAE,MAAM;cAAE,OAAO,EAAE;YAAO;UAAE,CAAC;QAAE;MAAE,CAAC;IAAE;EAAE,CAAC;AAAE,CAAqE"},"metadata":{},"sourceType":"module","externalDependencies":[]}