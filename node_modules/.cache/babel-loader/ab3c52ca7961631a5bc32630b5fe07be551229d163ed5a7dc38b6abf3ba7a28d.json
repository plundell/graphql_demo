{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx\";\nimport React from 'react';\nimport { TileGrid } from 'components/tiles.d/tile-grid.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction randomDelay(resolveWith) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (3000 - 1000) + 1000;\n    setTimeout(() => {\n      // console.log('resolving with',resolveWith)\n      resolve(resolveWith);\n    }, delay);\n  });\n}\nexport default class CountryResults extends React.Component {\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    console.log(this._ID, `<${this.constructor.name}>`, ...args);\n  }\n\n  // private cache:GridProps['tiles']={};\n\n  constructor(props) {\n    var _this$props$results;\n    super(props);\n    this._ID = void 0;\n    this.getTiles = () => {\n      const tiles = {};\n      if (this.props.results && this.props.results.length) {\n        for (const ent of this.props.results) {\n          tiles[ent.key] = this.getTile(ent);\n        }\n      }\n      return tiles;\n    };\n    this.buildTile = ent => {\n      const tile = {\n        title: ent.value,\n        className: ent.type.toLowerCase()\n      };\n      tile.content = this[`build${ent.type}TileContent`](ent);\n      tile.content.then(content => {\n        tile.content = content;\n      });\n      return tile;\n    };\n    this.buildCountryTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildContinentTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildLanguageTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this));\n    };\n    this._ID = Math.floor(Math.random() * 10000);\n    this.state = {\n      tiles: {}\n    };\n    this.log(\"creating\", (_this$props$results = this.props.results) === null || _this$props$results === void 0 ? void 0 : _this$props$results.map(ent => ent.value).join(', '));\n  }\n  getTile(ent) {\n    if (this.state.tiles.hasOwnProperty(ent.key) == false) {\n      const tile = this.buildTile(ent);\n      this.setTile(ent.key, tile); //async\n      return tile; //this tile is NOT from the state object, ie. any changes to it will....??\n    }\n\n    return this.state.tiles[ent.key];\n  }\n  setTile(key, tile) {\n    const tiles = {\n      ...this.state.tiles\n    };\n    tiles[key] = tile;\n    return new Promise(resolve => {\n      this.setState({\n        tiles\n      }, () => {\n        resolve();\n      });\n    });\n  }\n  render() {\n    const tiles = this.getTiles();\n    this.log(\"rendering:\", Object.values(tiles).map(t => `${t.title}${t.content instanceof Promise ? '*' : ''}`).join(', '));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.constructor.name,\n      children: this.props.results ? this.props.results.length ? /*#__PURE__*/_jsxDEV(TileGrid, {\n        tiles: tiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyResults\",\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this);\n  }\n}","map":{"version":3,"names":["React","TileGrid","randomDelay","resolveWith","Promise","resolve","delay","Math","random","setTimeout","CountryResults","Component","log","args","console","_ID","constructor","name","props","getTiles","tiles","results","length","ent","key","getTile","buildTile","tile","title","value","className","type","toLowerCase","content","then","buildCountryTileContent","buildContinentTileContent","buildLanguageTileContent","floor","state","map","join","hasOwnProperty","setTile","setState","render","Object","values","t"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx"],"sourcesContent":["import React from 'react'\nimport {TileGrid, Props as GridProps} from 'components/tiles.d/tile-grid.component'\nimport {Entity, NullableEntityArray} from './country-search.component'\n\ninterface Props {\n\tresults:NullableEntityArray\n}\n\ninterface State {\n\ttiles:GridProps['tiles']\n}\n\ntype Tile=GridProps['tiles'][keyof GridProps['tiles']];\n\nfunction randomDelay<T>(resolveWith:T):Promise<T>{\n\treturn new Promise(resolve=>{\n\t\tconst delay=Math.random() * (3000 - 1000) + 1000;\n\t\tsetTimeout(()=>{\n\t\t\t// console.log('resolving with',resolveWith)\n\t\t\tresolve(resolveWith);\n\t\t},delay);\n\t})\n}\n\nexport default class CountryResults extends React.Component<Props,State> {\n\tprivate _ID:number;\n\tlog(...args:any[]){\n\t\tconsole.log(this._ID,`<${this.constructor.name}>`,...args);\n\t}\n\n\t// private cache:GridProps['tiles']={};\n\t\n\tconstructor(props:Props){\n\t\tsuper(props);\n\t\tthis._ID=Math.floor(Math.random()*10000);\n\t\tthis.state={tiles:{}};\n\t\tthis.log(\"creating\",this.props.results?.map(ent=>ent.value).join(', '));\n\t}\n\n\n\tprivate getTiles=()=>{\n\t\tconst tiles:State['tiles']={};\n\t\tif(this.props.results && this.props.results.length){\n\t\t    for(const ent of this.props.results){\n\t\t    \ttiles[ent.key]=this.getTile(ent);\n\t\t\t}\n\t\t}\n\t\treturn tiles;\n\t}\n\tprivate getTile(ent:Entity):Tile{\n\t\tif(this.state.tiles.hasOwnProperty(ent.key)==false){\n\t\t\tconst tile=this.buildTile(ent);\n\t\t\tthis.setTile(ent.key,tile); //async\n\t\t\treturn tile; //this tile is NOT from the state object, ie. any changes to it will....??\n\t\t}\n\t\treturn this.state.tiles[ent.key];\n\t}\n\tprivate setTile(key:keyof State['tiles'],tile:Tile):Promise<void>{\n\t\tconst tiles={...this.state.tiles};\n\t\ttiles[key]=tile;\n\t\treturn new Promise(resolve=>{this.setState({tiles},()=>{resolve()})});\n\t}\n\tprivate buildTile=(ent:Entity):Tile=>{\n\t\tconst tile:any={title:ent.value, className:ent.type.toLowerCase()};\n\t\ttile.content=this[`build${ent.type}TileContent`](ent);\n\t\ttile.content.then((content:JSX.Element)=>{tile.content=content})\n\t\treturn tile;\n\t}\n\tprivate buildCountryTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildContinentTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildLanguageTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\n\trender(){\n\t\tconst tiles=this.getTiles()\n\t\tthis.log(\"rendering:\",Object.values(tiles).map(t=>(`${t.title}${t.content instanceof Promise ?'*':''}`)).join(', '));\n\t\treturn (<div className={this.constructor.name}>{\n\t\t\tthis.props.results ?\n\t\t\t\tthis.props.results.length ?\n\t\t\t\t\t<TileGrid tiles={tiles}/>\n\t\t\t\t\t:<div className='emptyResults'>No results</div>\n\t\t\t\t:''\n\t\t}</div>)\n\t}\n\n\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}