{"ast":null,"code":"var _jsxFileName = \"/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx\";\nimport React from 'react';\nimport { TileGrid } from 'components/tiles.d/tile-grid.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction randomDelay(resolveWith) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (3000 - 1000) + 1000;\n    setTimeout(() => {\n      // console.log('resolving with',resolveWith)\n      resolve(resolveWith);\n    }, delay);\n  });\n}\nexport default class CountryResults extends React.Component {\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    console.log(this._ID, `<${this.constructor.name}>`, ...args);\n  }\n  constructor(props) {\n    var _this$props$results;\n    super(props);\n    this._ID = void 0;\n    this.cache = {};\n    this.buildTile = ent => {\n      const tile = {\n        title: ent.value,\n        className: ent.type.toLowerCase()\n      };\n      const promise = this[`build${ent.type}TileContent`](ent);\n      tile.content = promise;\n      promise.then(content => {\n        tile.content = content;\n      });\n      return tile;\n    };\n    this.buildCountryTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildContinentTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this));\n    };\n    this.buildLanguageTileContent = ent => {\n      return randomDelay( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ent.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this));\n    };\n    this.getTiles = () => {\n      if (this.props.results) {\n        const tiles = {};\n        for (const ent of this.props.results) {\n          tiles[ent.key] = this.getTile(ent);\n        }\n        this.log(\"rendering:\", Object.values(tiles).map(t => `${t.title}${t.content instanceof Promise ? '*' : ''}`).join(', '));\n        return tiles;\n      } else {\n        console.log(\"empty search results\");\n        return null;\n      }\n    };\n    this._ID = Math.floor(Math.random() * 10000);\n    this.log(\"creating\", (_this$props$results = this.props.results) === null || _this$props$results === void 0 ? void 0 : _this$props$results.map(ent => ent.value).join(', '));\n  }\n  getTile(ent) {\n    if (this.cache.hasOwnProperty(ent.key) == false) {\n      this.cache[ent.key] = this.buildTile(ent);\n    }\n    return this.cache[ent.key];\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.constructor.name,\n      children: /*#__PURE__*/_jsxDEV(TileGrid, {\n        tiles: this.getTiles()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","TileGrid","randomDelay","resolveWith","Promise","resolve","delay","Math","random","setTimeout","CountryResults","Component","log","args","console","_ID","constructor","name","props","cache","buildTile","ent","tile","title","value","className","type","toLowerCase","promise","content","then","buildCountryTileContent","buildContinentTileContent","buildLanguageTileContent","getTiles","results","tiles","key","getTile","Object","values","map","t","join","floor","hasOwnProperty","render"],"sources":["/home/buck/Documents/software/formulate_graphql/src/components/country-search.d/country-results.component.tsx"],"sourcesContent":["import React from 'react'\nimport {TileGrid, Props as GridProps} from 'components/tiles.d/tile-grid.component'\nimport {Entity, NullableEntityArray} from './country-search.component'\n\ninterface Props {\n\tresults:NullableEntityArray\n}\n\ntype Tile=NonNullable<GridProps['tiles']>[keyof GridProps['tiles']];\n\nfunction randomDelay<T>(resolveWith:T):Promise<T>{\n\treturn new Promise(resolve=>{\n\t\tconst delay=Math.random() * (3000 - 1000) + 1000;\n\t\tsetTimeout(()=>{\n\t\t\t// console.log('resolving with',resolveWith)\n\t\t\tresolve(resolveWith);\n\t\t},delay);\n\t})\n}\n\nexport default class CountryResults extends React.Component<Props> {\n\tprivate _ID:number;\n\tlog(...args:any[]){\n\t\tconsole.log(this._ID,`<${this.constructor.name}>`,...args);\n\t}\n\n\tprivate cache:NonNullable<GridProps['tiles']>={};\n\t\n\tconstructor(props:Props){\n\t\tsuper(props);\n\t\tthis._ID=Math.floor(Math.random()*10000);\n\t\tthis.log(\"creating\",this.props.results?.map(ent=>ent.value).join(', '));\n\t}\n\n\n\n\tprivate getTile(ent:Entity):Tile{\n\t\tif(this.cache.hasOwnProperty(ent.key)==false){\n\t\t\tthis.cache[ent.key]=this.buildTile(ent);\n\t\t}\n\t\treturn this.cache[ent.key];\n\t}\n\n\tprivate buildTile=(ent:Entity):Tile=>{\n\t\tconst tile:any={title:ent.value, className:ent.type.toLowerCase()};\n\t\tconst promise=this[`build${ent.type}TileContent`](ent);\n\t\ttile.content=promise;\n\t\tpromise.then(content=>{tile.content=content})\n\t\treturn tile;\n\t}\n\tprivate buildCountryTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildContinentTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\tprivate buildLanguageTileContent=(ent:Entity):Promise<JSX.Element>=>{\n\t\treturn randomDelay(<span>{ent.type}</span>);\n\t}\n\n\tprivate getTiles=()=>{\n\t\tif(this.props.results){\n\t\t\tconst tiles:typeof this.cache={};\n\t\t    for(const ent of this.props.results){\n\t\t    \ttiles[ent.key]=this.getTile(ent);\n\t\t\t}\n\t\t\tthis.log(\"rendering:\",Object.values(tiles).map(t=>(`${t.title}${t.content instanceof Promise ?'*':''}`)).join(', '));\n\t\t\treturn tiles;\n\t\t}else{\n\t\t\tconsole.log(\"empty search results\")\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className={this.constructor.name}>\n\t\t\t\t<TileGrid tiles={this.getTiles()}/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}